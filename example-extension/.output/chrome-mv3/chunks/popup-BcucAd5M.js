(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const c of t.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();try{}catch(i){console.error("[wxt] Failed to initialize plugins",i)}var y,b;const E=(b=(y=globalThis.browser)==null?void 0:y.runtime)!=null&&b.id?globalThis.browser:globalThis.chrome,v=E;definePopup({main(){var t,c,a,g,m,f,P,w;console.log("[Popup] Popup script started"),console.info("[Popup] Extension popup opened");let i=0,n=null,s=0;function r(){i++;const o=document.getElementById("click-counter");o&&(o.textContent=i.toString()),console.log(`[Popup] Click counter updated: ${i}`)}function e(o,l=!1){const p=document.getElementById("status");p&&(p.textContent=o,p.style.color=l?"#ff6b6b":"#fff"),console.log(`[Popup] Status: ${o}`)}(t=document.getElementById("test-basic"))==null||t.addEventListener("click",()=>{r(),e("Testing basic console methods..."),console.log("[Popup] Basic console.log test"),console.info("[Popup] Basic console.info test"),console.warn("[Popup] Basic console.warn test"),console.error("[Popup] Basic console.error test"),console.debug("[Popup] Basic console.debug test"),e("Basic console methods tested")}),(c=document.getElementById("test-objects"))==null||c.addEventListener("click",()=>{r(),e("Testing object logging...");const o={popup:{timestamp:new Date,windowSize:{width:window.innerWidth,height:window.innerHeight},location:window.location.href,userAgent:navigator.userAgent.substring(0,50)+"..."},array:[1,2,3,{nested:"value"}],nullValue:null,undefinedValue:void 0,booleanValue:!0};console.log("[Popup] Complex object test:",o),console.log("[Popup] Array test:",["popup","test",{key:"value"}]),e("Object logging tested")}),(a=document.getElementById("test-errors"))==null||a.addEventListener("click",()=>{r(),e("Testing error logging...");try{throw new Error("Test error from popup with stack trace")}catch(o){console.error("[Popup] Caught test error:",o)}try{null.someMethod()}catch(o){console.error("[Popup] Null reference error:",o)}e("Error logging tested")}),(g=document.getElementById("test-promises"))==null||g.addEventListener("click",()=>{r(),e("Testing promise rejections..."),Promise.reject(new Error("Handled popup promise rejection")).catch(o=>{console.log("[Popup] Promise rejection handled:",o.message)}),setTimeout(()=>{Promise.reject("Unhandled popup promise rejection")},100),e("Promise rejection tests initiated")}),(m=document.getElementById("test-performance"))==null||m.addEventListener("click",()=>{r(),e("Testing performance timing...");const o=performance.now(),l=[];for(let d=0;d<100;d++){const u=document.createElement("div");u.textContent=`Test element ${d}`,u.style.display="none",document.body.appendChild(u),l.push(u)}l.forEach(d=>d.remove());const h=performance.now()-o;console.log(`[Popup] Performance test completed in ${h.toFixed(2)}ms`),console.log(`[Popup] Created and removed ${l.length} DOM elements`),e(`Performance test: ${h.toFixed(2)}ms`)}),(f=document.getElementById("test-communication"))==null||f.addEventListener("click",async()=>{r(),e("Testing background communication...");try{console.log("[Popup] Sending message to background script...");const o=await v.runtime.sendMessage({type:"test-response",from:"popup",timestamp:Date.now()});console.log("[Popup] Response received from background:",o),e("Background communication successful")}catch(o){console.error("[Popup] Background communication failed:",o),e("Background communication failed",!0)}}),(P=document.getElementById("start-periodic"))==null||P.addEventListener("click",()=>{r(),n!==null&&clearInterval(n),s=0,n=setInterval(()=>{var o;s++,console.log(`[Popup] Periodic log #${s} at ${new Date().toISOString()}`),s>=10&&((o=document.getElementById("stop-periodic"))==null||o.click())},1e3),document.getElementById("start-periodic").disabled=!0,document.getElementById("stop-periodic").disabled=!1,e("Periodic logging started"),console.log("[Popup] Started periodic logging")}),(w=document.getElementById("stop-periodic"))==null||w.addEventListener("click",()=>{n!==null&&(clearInterval(n),n=null),document.getElementById("start-periodic").disabled=!1,document.getElementById("stop-periodic").disabled=!0,e("Periodic logging stopped"),console.log("[Popup] Stopped periodic logging")}),window.addEventListener("resize",()=>{console.log("[Popup] Popup window resized:",{width:window.innerWidth,height:window.innerHeight})}),window.addEventListener("focus",()=>{console.log("[Popup] Popup window focused")}),window.addEventListener("blur",()=>{console.log("[Popup] Popup window blurred")}),window.addEventListener("beforeunload",()=>{console.log("[Popup] Popup about to close"),n!==null&&clearInterval(n)}),e("Popup loaded - Ready to test"),setTimeout(()=>{console.log("[Popup] Automatic startup test after 1 second"),console.info("[Popup] Popup initialization completed")},1e3),console.log("[Popup] Popup script initialization complete")}});
